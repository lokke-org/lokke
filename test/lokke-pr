#!./guile
!# ;; -*-scheme-*-

;;; Copyright (C) 2019 Rob Browning <rlb@defaultvalue.org>
;;;
;;; This project is free software; you can redistribute it and/or
;;; modify it under the terms of (at your option) either of the
;;; following two licences:
;;;
;;;   1) The GNU Lesser General Public License as published by the
;;;      Free Software Foundation; either version 2.1, or (at your
;;;      option) any later version
;;;
;;;   2) The Eclipse Public License; either version 1.0 or (at your
;;;      option) any later version.

(read-set! keywords 'postfix)  ; srfi-88

(use-modules
 ((lokke scm test-anything) select: (tap-test-runner))
 ((lokke pr) prefix: t/)
 ((lokke compare) prefix: c/)
 ((lokke vector) select: (vector))
 ((srfi srfi-1) select: (iota))
 ((srfi srfi-64)
  select: (test-assert
           test-begin
           test-end
           test-equal
           test-group
           test-runner-current
           test-runner-fail-count)))

(when (equal? "tap" (getenv "LOKKE_TEST_PROTOCOL"))
  (test-runner-current (tap-test-runner)))

(test-begin (basename (car (program-arguments))))

(test-group
 "test basic printing"
 (test-equal "test string" (t/with-out-str (t/print "test string")))
 (test-equal "1" (t/print-str 1))
 (test-equal "string" (t/print-str "string"))
 (test-equal ":keyword" (t/print-str #:keyword))
 (test-equal "true" (t/print-str #t))
 (test-equal "false" (t/print-str #f))
 (test-equal "first second third" (t/print-str "first" "second" "third"))
 (test-equal "1 2 3" (t/print-str 1 2 3))
 (test-equal "nil" (t/print-str #nil))
 (test-equal "1 nil" (t/print-str 1 #nil))
 (test-equal " " (t/print-str #\space))
 (test-equal "foo" (t/print-str 'foo))
 (test-equal "()" (t/print-str '()))
 (test-equal "" (t/print-str)))

(test-group
 "test collection printing"
 (test-equal "(1 2 3)" (t/print-str '(1 2 3))))

(test-end)

(unless (zero? (test-runner-fail-count (test-runner-current)))
  (exit 2))
