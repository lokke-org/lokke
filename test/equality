#!./guile
!# ;; -*-scheme-*-

;;; Copyright (C) 2019 Rob Browning <rlb@defaultvalue.org>
;;;
;;; This project is free software; you can redistribute it and/or
;;; modify it under the terms of (at your option) either of the
;;; following two licences:
;;;
;;;   1) The GNU Lesser General Public License as published by the
;;;      Free Software Foundation; either version 2.1, or (at your
;;;      option) any later version
;;;
;;;   2) The Eclipse Public License; either version 1.0 or (at your
;;;      option) any later version.

(read-set! keywords 'postfix)  ;; srfi-88

(use-modules
 ((lokke scm test-anything) select: (tap-test-runner))
 ((lokke core) select: ((= . clj=)))
 ((lokke hash-map) select: (hash-map))
 ((lokke vector) select: (vector))
 ((srfi srfi-64)
  select: (test-assert
           test-begin
           test-end
           test-eq
           test-equal
           test-eqv
           test-group
           test-runner-current
           test-runner-fail-count)))

(when (equal? "tap" (getenv "LOKKE_TEST_PROTOCOL"))
  (test-runner-current (tap-test-runner)))

(test-begin (basename (car (program-arguments))))

(test-group
 "clj="

 (test-assert (clj= 1 1))
 (test-assert (not (clj= 1 2)))
 (test-assert (not (clj= 1 "x")))
 (test-assert (clj= "x" "x"))
 (test-assert (not (clj= "x" "y")))

 (test-assert (not (clj= #nil #f)))
 (test-assert (not (clj= #nil '())))
 (test-assert (not (clj= #nil #())))

 (test-assert (clj= '(1) #(1)))
 (test-assert (clj= #(1) '(1)))
 (test-assert (not (clj= #(1) (vector 1 2 3))))

 (test-assert (clj= (vector 1 2 3) (vector 1 2 3)))
 (test-assert (not (clj= (vector 1 2) (vector 1 2 3)))))

(test-end)

(unless (zero? (test-runner-fail-count (test-runner-current)))
  (exit 2))
